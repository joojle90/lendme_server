"use strict";
/**
 * Created by Joojle on 10/04/18.
 */
var express = require("express");
var q_refcode_1 = require("./q_refcode");
var router = express.Router();
var db = require('../../database/db.service');
var authentication = require('../../utils/authentication');
// get all campgrounds
router.get('/refcode', function (req, res) {
    db.getConnection(function (err, connection) {
        if (err) {
            res.status(500).send({ message: err });
        }
        else {
            var params_1 = req.query;
            var record = void 0, query_line_1 = "";
            record = "" + q_refcode_1.REF_CODE_SELECTIVE;
            if (Object.keys(params_1).length > 0) {
                Object.keys(params_1).forEach(function (key, index) {
                    if (key === "moduleId") {
                        var criteria = params_1.moduleId === "" ? "" : " AND module_id = " + ("'" + params_1.moduleId + "'");
                        query_line_1 += criteria;
                    }
                });
            }
            record += query_line_1;
            console.log("RECORD", record);
            connection.query(record, function (err, results) {
                connection.release();
                if (err) {
                    res.status(500).send({ message: err });
                }
                else {
                    res.send(results);
                }
            });
        }
    });
});
module.exports = router;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy9yZWZjb2RlL3JlZmNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHO0FBRUgsaUNBQW1DO0FBQ25DLHlDQUFpRDtBQUVqRCxJQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7QUFFaEMsSUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLDJCQUEyQixDQUFDLENBQUM7QUFDaEQsSUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUM7QUFFN0Qsc0JBQXNCO0FBQ3RCLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFVBQUMsR0FBUSxFQUFFLEdBQVE7SUFDekMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxVQUFDLEdBQVEsRUFBRSxVQUFlO1FBQzFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDVCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUMsQ0FBQyxDQUFDO1FBQ3RDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNQLElBQU0sUUFBTSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFFekIsSUFBSSxNQUFNLFNBQUEsRUFBRSxZQUFVLEdBQUcsRUFBRSxDQUFDO1lBRTVCLE1BQU0sR0FBRyxLQUFJLDhCQUFxQixDQUFDO1lBRW5DLEVBQUUsQ0FBQSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBTSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUMsR0FBRyxFQUFFLEtBQUs7b0JBQ3RDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO3dCQUN4QixJQUFNLFFBQVEsR0FBRyxRQUFNLENBQUMsUUFBUSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsSUFBRyxNQUFLLFFBQU0sQ0FBQyxRQUFRLE1BQUksQ0FBQSxDQUFDO3dCQUM5RixZQUFVLElBQUksUUFBUSxDQUFDO29CQUN4QixDQUFDO2dCQUNGLENBQUMsQ0FBQyxDQUFDO1lBQ0osQ0FBQztZQUVELE1BQU0sSUFBSyxZQUFVLENBQUM7WUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFOUIsVUFBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsVUFBQyxHQUFRLEVBQUUsT0FBWTtnQkFDL0MsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUVyQixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUNULEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUM7Z0JBQ3RDLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ1AsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDbkIsQ0FBQztZQUNGLENBQUMsQ0FBQyxDQUFDO1FBQ0osQ0FBQztJQUNGLENBQUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUM7QUFFSCxpQkFBUyxNQUFNLENBQUMiLCJmaWxlIjoicm91dGVzL3JlZmNvZGUvcmVmY29kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBKb29qbGUgb24gMTAvMDQvMTguXG4gKi9cblxuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFJFRl9DT0RFX1NFTEVDVElWRSB9IGZyb20gXCIuL3FfcmVmY29kZVwiO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uLy4uL2RhdGFiYXNlL2RiLnNlcnZpY2UnKTtcbmNvbnN0IGF1dGhlbnRpY2F0aW9uID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvYXV0aGVudGljYXRpb24nKTtcblxuLy8gZ2V0IGFsbCBjYW1wZ3JvdW5kc1xucm91dGVyLmdldCgnL3JlZmNvZGUnLCAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XG5cdGRiLmdldENvbm5lY3Rpb24oKGVycjogYW55LCBjb25uZWN0aW9uOiBhbnkpID0+IHtcblx0XHRpZiAoZXJyKSB7XG5cdFx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7bWVzc2FnZTogZXJyfSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IHBhcmFtcyA9IHJlcS5xdWVyeTtcblxuXHRcdFx0bGV0IHJlY29yZCwgcXVlcnlfbGluZSA9IFwiXCI7XG5cblx0XHRcdHJlY29yZCA9IGAkeyBSRUZfQ09ERV9TRUxFQ1RJVkUgfWA7XG5cblx0XHRcdGlmKE9iamVjdC5rZXlzKHBhcmFtcykubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRPYmplY3Qua2V5cyhwYXJhbXMpLmZvckVhY2goKGtleSwgaW5kZXgpID0+IHtcblx0XHRcdFx0XHRpZiAoa2V5ID09PSBcIm1vZHVsZUlkXCIpIHtcblx0XHRcdFx0XHRcdGNvbnN0IGNyaXRlcmlhID0gcGFyYW1zLm1vZHVsZUlkID09PSBcIlwiID8gXCJcIiA6IFwiIEFORCBtb2R1bGVfaWQgPSBcIiArIGAnJHsgcGFyYW1zLm1vZHVsZUlkIH0nYDtcblx0XHRcdFx0XHRcdHF1ZXJ5X2xpbmUgKz0gY3JpdGVyaWE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0cmVjb3JkICs9ICBxdWVyeV9saW5lO1xuXHRcdFx0Y29uc29sZS5sb2coXCJSRUNPUkRcIiwgcmVjb3JkKTtcblxuXHRcdFx0Y29ubmVjdGlvbi5xdWVyeShyZWNvcmQsIChlcnI6IGFueSwgcmVzdWx0czogYW55KSA9PiB7XG5cdFx0XHRcdGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuXG5cdFx0XHRcdGlmIChlcnIpIHtcblx0XHRcdFx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7bWVzc2FnZTogZXJyfSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmVzLnNlbmQocmVzdWx0cyk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblx0fSk7XG59KTtcblxuZXhwb3J0ID0gcm91dGVyOyJdfQ==
